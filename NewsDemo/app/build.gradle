apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

jacoco {
    toolVersion = '0.8.1' //Use latest version
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.kevin.newsdemo"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true

//        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation ('androidx.test.espresso:espresso-intents:3.2.0')
    implementation ('androidx.test.espresso:espresso-idling-resource:3.2.0')

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    implementation 'com.jakewharton:butterknife:10.1.0'
    kapt 'com.jakewharton:butterknife-compiler:10.1.0'

    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation group: 'com.squareup.retrofit2', name: 'converter-gson', version: '2.6.0'
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/logging-interceptor
    implementation group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '4.0.1'
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/mockwebserver
    testImplementation group: 'com.squareup.okhttp3', name: 'mockwebserver', version: '4.0.1'



    def room_version = "2.1.0" // 2.1.0 for latest stable version

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'

    implementation group: 'com.jakewharton.retrofit', name: 'retrofit2-rxjava2-adapter', version: '1.0.0'

    testImplementation "org.mockito:mockito-all:1.10.19"
    implementation 'org.mockito:mockito-core:3.0.0'

    testImplementation "org.robolectric:robolectric:4.3"
// https://mvnrepository.com/artifact/androidx.test.ext/junit
    testImplementation group: 'androidx.test.ext', name: 'junit', version: '1.1.1'

    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


}

task jacocoUnitTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

//    $buildDir = // Location of the build directory for the build Variant

    def coverageSourceDirs = [
            "src/main/java"
    ]

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*'
    ]

    def javaClasses = fileTree(
            dir: "$buildDir/intermediates/classes/debug",
            excludes: fileFilter
    )

    classDirectories = files([ javaClasses ])
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec"
    ])

    reports {
        xml.enabled = true
        html.enabled = true
    }
}
